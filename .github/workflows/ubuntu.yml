name: Build Ubuntu

on:
  workflow_call:
    inputs:
      MAJOR_VERSION:
        description: "Version string for wireshark tag needed to build can be v#.#.# or v#.#.#-rc#"
        type: string
        required: true
        default: '4'
      MINOR_VERSION:
        description: "Minor version of the wireshark tag"
        type: string
        required: true
        default: '2'
      PATCH_VERSION:
        description: "Patch version of the wireshark tag"
        type: string
        required: true
        default: '4'
        
env:
  # This is the name for the file in releases
  PLUGIN_NAME: wireshark-smf-linux-x86_64.tar.gz

jobs:
  ubuntu:
    name: Build on Linux
    runs-on: ubuntu-22.04
    steps:
      #- name: Checkout with Submodule
      #  if: ${{ inputs.MAJOR_VERSION == '' }}
      #  uses: actions/checkout@v4
      #  with:
      #    submodules: recursive

      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout Wireshark
        uses: actions/checkout@v4
        with:
          repository: wireshark/wireshark
          path: "./wireshark"
          ref: v${{ inputs.MAJOR_VERSION }}.${{ inputs.MINOR_VERSION }}.${{ inputs.PATCH_VERSION }}
          
      - name: Install deps
        run: sudo ./wireshark/tools/debian-setup.sh --install-optional --install-test-deps --install-deb-deps python3-pip -y

      - name: Link SMF plugin
        shell: bash
        run: |
          ln -s ${{ github.workspace }}/src/CMakeListsCustom.txt  ${{ github.workspace }}/wireshark/CMakeListsCustom.txt
          ln -s ${{ github.workspace }}/src/smf  ${{ github.workspace }}/wireshark/plugins/epan/smf

      - name: Mkdir
        run: mkdir build

      - name: Cmake
        working-directory: build
        run: cmake -GNinja ${{ github.workspace }}/wireshark

      - name: Build
        run: ninja
        working-directory: build
        
      # A compressed tarball is created for release
      # This means that the artifact is compressed and zipped as a result.
      - name: Create Compressed Tarball
        working-directory: ${{ github.workspace }}/build/run/plugins
        run: tar -czvf ${{ github.workspace }}/${{ env.PLUGIN_NAME }} **/epan/smf.so
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_NAME }}
          path: "${{ github.workspace }}/${{ env.PLUGIN_NAME }}"
          overwrite: true
