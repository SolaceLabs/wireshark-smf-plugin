name: Build Windows

on:
  workflow_call:
    inputs:
      MAJOR_VERSION:
        description: "Version string for wireshark tag needed to build can be v#.#.# or v#.#.#-rc#"
        type: string
        required: true
        default: '4'
      MINOR_VERSION:
        description: "Minor version of the wireshark tag"
        type: string
        required: true
        default: '2'
      PATCH_VERSION:
        description: "Patch version of the wireshark tag"
        type: string
        required: true
        default: '4'

env:
  # This is the name for the file in releases
  PLUGIN_NAME: wireshark-smf-windows-x64.zip
  
jobs:
  windows:
    name: Build on Windows
    runs-on: windows-2022
    env:
      PLATFORM: x64
      WIRESHARK_BASE_DIR: C:\Development
      CMAKE_PREFIX_PATH: D:\a\wireshark-smf-plugin\Qt\6.2.3\msvc2019_64
      WIRESHARK_VERSION_EXTRA: -GithubActionBuild
    steps:
      #- name: Checkout with Submodule
      #  if: ${{ inputs.MAJOR_VERSION == '' }}
      #  uses: actions/checkout@v4
      #  with:
      #    submodules: recursive
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout Wireshark
        uses: actions/checkout@v4
        with:
          repository: wireshark/wireshark
          path: "./wireshark"
          ref: v${{ inputs.MAJOR_VERSION }}.${{ inputs.MINOR_VERSION }}.${{ inputs.PATCH_VERSION }}

      - name: Choco install
        run: choco install -y --force --no-progress asciidoctorj xsltproc docbook-bundle nsis winflexbison3 cmake

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install strawberryperl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: "5.30"
          distribution: strawberry
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          arch: win64_msvc2019_64
          version: 6.2.3
          modules: "qt5compat"
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: 16.8

      - name: Set MSVC command prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Link SMF plugin
        shell: cmd
        run: |
          move D:\a\wireshark-smf-plugin\wireshark-smf-plugin\src\smf D:\a\wireshark-smf-plugin\wireshark-smf-plugin\wireshark\plugins\epan
          copy D:\a\wireshark-smf-plugin\wireshark-smf-plugin\src\CMakeListsCustom.txt D:\a\wireshark-smf-plugin\wireshark-smf-plugin\wireshark\
      - name: Mkdir
        run: mkdir build

      - name: Cmake
        run: |
          cmake -DUSE_qt6=ON -DCMAKE_SYSTEM_VERSION="10.0.20348.0" -A x64 ../wireshark -DCMAKE_POLICY_DEFAULT_CMP0094=NEW -DPython3_ROOT_DIR='${{ env.Python3_ROOT_DIR }}' -DPython3_EXECUTABLE='${{ env.Python3_ROOT_DIR }}\python.exe' -DPython3_LIBRARY='${{ env.Python3_ROOT_DIR }}\libs\python380.lib' -DPython3_INCLUDE_DIR='${{ env.Python3_ROOT_DIR }}\Include'
        env:
          PLATFORM: x64
          WIRESHARK_BASE_DIR: C:/wireshark-libs
          QT5_BASE_DIR: C:/Qt/5.12.3/msvc2017_64
        working-directory: build

      - name: Build
        run: cmake --build . --config RelWithDebInfo
        working-directory: build
      
      # A zip is created for release
      # This means that the artifact is double-zipped as a result
      - name: Create Zip
        working-directory: ${{ github.workspace }}/build/run/RelWithDebInfo/plugins
        run: Compress-Archive ./*/epan/smf.* -Destination ${{ github.workspace }}\${{ env.PLUGIN_NAME }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_NAME }}
          path: ${{ github.workspace }}/${{ env.PLUGIN_NAME }}
